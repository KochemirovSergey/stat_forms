#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Neo4j —Å Telegram –±–æ—Ç–æ–º
"""

import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
PROJECT_ROOT = Path(__file__).parent.absolute()
sys.path.append(str(PROJECT_ROOT))

from tg_bot.neo4j_matcher import Neo4jMatcher
from tg_bot.config import DASHBOARD_SERVER_URL

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

def test_neo4j_matcher():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Neo4j –º–∞—Ç—á–µ—Ä–∞"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï NEO4J MATCHER ===\n")
    
    matcher = None
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ç—á–µ—Ä–∞
        print("1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Neo4j –º–∞—Ç—á–µ—Ä–∞...")
        matcher = Neo4jMatcher()
        print("‚úÖ Neo4j –º–∞—Ç—á–µ—Ä —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        test_queries = [
            "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",
            "—á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π",
            "–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
            "—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",
            "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∫–æ–ª",
            "–≤—ã–ø—É—Å–∫–Ω–∏–∫–∏ –≤—É–∑–æ–≤",
            "–Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –æ –ø–æ–≥–æ–¥–µ –≤ –ú–æ—Å–∫–≤–µ"
        ]
        
        print("2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π...")
        print("-" * 60)
        
        for i, query in enumerate(test_queries, 1):
            print(f"–¢–µ—Å—Ç {i}: {query}")
            
            # –ü–æ–∏—Å–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —É–∑–ª–∞
            node_id = matcher.find_matching_schetnoe_node(query)
            
            if node_id:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º —É–∑–ª–µ
                node_info = matcher.get_node_info_by_id(node_id)
                if node_info:
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —É–∑–µ–ª:")
                    print(f"   ID: {node_id}")
                    print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {node_info.get('node_name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                    print(f"   –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {node_info.get('node_full_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"   –¢–∞–±–ª–∏—Ü–∞: {node_info.get('table_number', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    
                    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –¥–∞—à–±–æ—Ä–¥
                    dashboard_url = f"{DASHBOARD_SERVER_URL}/dashboard/{node_id}"
                    print(f"   üîó –î–∞—à–±–æ—Ä–¥: {dashboard_url}")
                else:
                    print(f"‚ö†Ô∏è  –£–∑–µ–ª –Ω–∞–π–¥–µ–Ω, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            else:
                print("‚ùå –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —É–∑–µ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            print("-" * 60)
        
        print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è...")
        # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
        test_query = "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"
        print(f"–ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {test_query}")
        node_id = matcher.find_matching_schetnoe_node(test_query)
        if node_id:
            print("‚úÖ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ö†Ô∏è  –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ")
        
        print("\n4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —É–∑–ª–æ–≤...")
        nodes = matcher._get_schetnoe_nodes()
        print(f"–í—Å–µ–≥–æ —Å—á–µ—Ç–Ω—ã—Ö —É–∑–ª–æ–≤ –≤ –±–∞–∑–µ: {len(nodes)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —É–∑–ª–æ–≤
        print("\n–ü—Ä–∏–º–µ—Ä—ã —É–∑–ª–æ–≤:")
        for i, node in enumerate(nodes[:5]):
            print(f"  {i+1}. {node.get('node_name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} (ID: {node.get('node_id', 'unknown')})")
        
        if len(nodes) > 5:
            print(f"  ... –∏ –µ—â–µ {len(nodes) - 5} —É–∑–ª–æ–≤")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}", exc_info=True)
        return False
    
    finally:
        if matcher:
            matcher.close()
    
    return True

def test_dashboard_url_generation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ì–ï–ù–ï–†–ê–¶–ò–ò URL –î–ê–®–ë–û–†–î–ê ===\n")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ node_id
    test_node_ids = [
        "4:fb7d1b8c-123e-4567-8901-234567890abc:123",
        "4:12345678-abcd-efgh-ijkl-mnopqrstuvwx:456",
        "invalid-node-id"
    ]
    
    print(f"–ë–∞–∑–æ–≤—ã–π URL –¥–∞—à–±–æ—Ä–¥-—Å–µ—Ä–≤–µ—Ä–∞: {DASHBOARD_SERVER_URL}")
    print("-" * 60)
    
    for i, node_id in enumerate(test_node_ids, 1):
        dashboard_url = f"{DASHBOARD_SERVER_URL}/dashboard/{node_id}"
        print(f"–¢–µ—Å—Ç {i}:")
        print(f"  Node ID: {node_id}")
        print(f"  Dashboard URL: {dashboard_url}")
        print(f"  URL —Å –≥–æ–¥–æ–º: {dashboard_url}?year=2023")
        print("-" * 60)

def simulate_bot_integration():
    """–°–∏–º—É–ª—è—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –±–æ—Ç–æ–º"""
    print("\n=== –°–ò–ú–£–õ–Ø–¶–ò–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° –ë–û–¢–û–ú ===\n")
    
    matcher = None
    try:
        matcher = Neo4jMatcher()
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_query = "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –≤ –≤—É–∑–∞—Ö"
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: '{user_query}'")
        print("\n–≠—Ç–∞–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
        print("1. ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ CSV –¥–∞–Ω–Ω—ã—Ö (—Å–∏–º—É–ª—è—Ü–∏—è)")
        print("2. ‚úÖ Tavily –ø–æ–∏—Å–∫ (—Å–∏–º—É–ª—è—Ü–∏—è)")
        print("3. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å Neo4j —É–∑–ª–∞–º–∏...")
        
        # –ü–æ–∏—Å–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —É–∑–ª–∞
        matching_node_id = matcher.find_matching_schetnoe_node(user_query)
        
        if matching_node_id:
            node_info = matcher.get_node_info_by_id(matching_node_id)
            if node_info:
                node_name = node_info.get('node_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É–∑–µ–ª')
                dashboard_url = f"{DASHBOARD_SERVER_URL}/dashboard/{matching_node_id}"
                
                print("4. ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ!")
                print(f"   –£–∑–µ–ª: {node_name}")
                print(f"   URL –¥–∞—à–±–æ—Ä–¥–∞: {dashboard_url}")
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∫–∞–∫ –≤ –±–æ—Ç–µ
                dashboard_link = f"\nüéØ **–ù–∞–π–¥–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:**\n"
                dashboard_link += f"üìä {node_name}\n"
                dashboard_link += f"üîó [–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥]({dashboard_url})\n"
                dashboard_link += f"üìà –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –¥–∏–Ω–∞–º–∏–∫–∏"
                
                print("\n–û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω–µ–Ω:")
                print(dashboard_link)
            else:
                print("4. ‚ö†Ô∏è  –£–∑–µ–ª –Ω–∞–π–¥–µ–Ω, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        else:
            print("4. ‚ùå –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —É–∑–µ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("   –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∞—à–±–æ—Ä–¥ –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ –æ—Ç–≤–µ—Ç—É")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏: {str(e)}", exc_info=True)
    
    finally:
        if matcher:
            matcher.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò NEO4J –° TELEGRAM –ë–û–¢–û–ú")
    print("=" * 60)
    
    try:
        # –¢–µ—Å—Ç 1: Neo4j –º–∞—Ç—á–µ—Ä
        if not test_neo4j_matcher():
            print("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Neo4j –º–∞—Ç—á–µ—Ä–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ")
            return
        
        # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL
        test_dashboard_url_generation()
        
        # –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        simulate_bot_integration()
        
        print("\n" + "=" * 60)
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û")
        print("üöÄ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Neo4j —Å Telegram –±–æ—Ç–æ–º –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}", exc_info=True)
        print("‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–í–ê–õ–ï–ù–û")

if __name__ == "__main__":
    main()