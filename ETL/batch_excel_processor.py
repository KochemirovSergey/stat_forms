import os
import time
from pathlib import Path
from typing import Dict, List, Any

# –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö, —Ç–∞–∫ –∏ –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
try:
    from .excel_processor import process_directory
except ImportError:
    from excel_processor import process_directory


def process_all_regions(base_directory: str = "2024/") -> Dict[str, Any]:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –ø–∞–ø–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –∏—Å–ø–æ–ª—å–∑—É—è excel_processor.
    
    Args:
        base_directory: –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –ø–∞–ø–∫–∞–º–∏
        
    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏:
        {
            "total_folders": int,
            "successful": int, 
            "failed": int,
            "errors": [{"folder": str, "error": str}],
            "execution_time": float,
            "folder_times": {"folder_name": float}
        }
    """
    start_time = time.time()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result = {
        "total_folders": 0,
        "successful": 0,
        "failed": 0,
        "errors": [],
        "execution_time": 0.0,
        "folder_times": {}
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not os.path.exists(base_directory):
        result["errors"].append({
            "folder": base_directory,
            "error": f"–ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è '{base_directory}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        })
        result["execution_time"] = time.time() - start_time
        return result
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ø–æ–∫ –≤ –±–∞–∑–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    try:
        items = os.listdir(base_directory)
        folders = []
        
        for item in items:
            item_path = os.path.join(base_directory, item)
            if os.path.isdir(item_path) and not item.startswith('.'):
                folders.append(item)
        
        result["total_folders"] = len(folders)
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(folders)} –ø–∞–ø–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ '{base_directory}'")
        print("=" * 60)
        
    except Exception as e:
        result["errors"].append({
            "folder": base_directory,
            "error": f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {str(e)}"
        })
        result["execution_time"] = time.time() - start_time
        return result
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –ø–∞–ø–∫—É
    for folder_name in sorted(folders):
        folder_path = os.path.join(base_directory, folder_name)
        folder_start_time = time.time()
        
        print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–ø–∫–∏: {folder_name}")
        
        try:
            # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑ excel_processor
            process_directory(folder_path)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            folder_execution_time = time.time() - folder_start_time
            result["folder_times"][folder_name] = folder_execution_time
            result["successful"] += 1
            
            print(f"‚úì –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∑–∞ {folder_execution_time:.2f} —Å–µ–∫")
            
        except Exception as e:
            folder_execution_time = time.time() - folder_start_time
            result["folder_times"][folder_name] = folder_execution_time
            result["failed"] += 1
            result["errors"].append({
                "folder": folder_name,
                "error": str(e)
            })
            
            print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {str(e)}")
        
        print("-" * 40)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    result["execution_time"] = time.time() - start_time
    
    return result


def print_summary_report(result: Dict[str, Any]) -> None:
    """
    –í—ã–≤–æ–¥–∏—Ç –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏.
    
    Args:
        result: —Å–ª–æ–≤–∞—Ä—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    """
    print("\n" + "=" * 60)
    print("–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 60)
    
    print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–ø–æ–∫: {result['total_folders']}")
    print(f"–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result['successful']}")
    print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏: {result['failed']}")
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {result['execution_time']:.2f} —Å–µ–∫")
    
    if result['successful'] > 0:
        avg_time = sum(result['folder_times'].values()) / len(result['folder_times'])
        print(f"–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∞–ø–∫–∏: {avg_time:.2f} —Å–µ–∫")
    
    # –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if result['errors']:
        print(f"\n–û–®–ò–ë–ö–ò ({len(result['errors'])}):")
        print("-" * 40)
        for error in result['errors']:
            print(f"–ü–∞–ø–∫–∞: {error['folder']}")
            print(f"–û—à–∏–±–∫–∞: {error['error']}")
            print("-" * 40)
    
    # –í—ã–≤–æ–¥–∏–º —Ç–æ–ø —Å–∞–º—ã—Ö –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
    if result['folder_times']:
        print(f"\n–í–†–ï–ú–Ø –û–ë–†–ê–ë–û–¢–ö–ò –ü–û –ü–ê–ü–ö–ê–ú:")
        print("-" * 40)
        sorted_times = sorted(result['folder_times'].items(), 
                            key=lambda x: x[1], reverse=True)
        
        for folder, exec_time in sorted_times[:10]:  # –¢–æ–ø 10
            status = "‚úì" if folder not in [e['folder'] for e in result['errors']] else "‚úó"
            print(f"{status} {folder}: {exec_time:.2f} —Å–µ–∫")
    
    print("=" * 60)


if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ –º–∞—Å—Å–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ Excel —Ñ–∞–π–ª–æ–≤...")
    print("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Å–µ –ø–∞–ø–∫–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ '2024/'")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    result = process_all_regions()
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print_summary_report(result)
    
    # –í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if result['failed'] == 0:
        print(f"\nüéâ –í—Å–µ {result['successful']} –ø–∞–ø–æ–∫ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
    else:
        print(f"\n‚ö†Ô∏è  –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏:")
        print(f"   –£—Å–ø–µ—à–Ω–æ: {result['successful']}")
        print(f"   –° –æ—à–∏–±–∫–∞–º–∏: {result['failed']}")